⭕사실 accessToken과 refreshToken은 신경쓰지 않을거임.
우리에게 중요한 건 githubID, email, name, avartar가 있다.

⭕
----------------------------userController.js-------------------------------
export const githubLoginCallback = (accessToken, refreshToken, profile, cb) => {
  console.log(accessToken, refreshToken, profile, cb);
};

export const postGithubLogin = (req, res) => {
  res.send(routes.home);
};
-------------------------------->>>>>---------------------------------------
export const githubLoginCallback = async (_, __, profile, cb) => {
  const {
    _json: { id, avartar_url, name, email },
  } = profile;
  try {
    const user = await User.findOne({ email });
    if (user) {
      user.githubId = id;
      user.save();
      //error, response
      return cb(null, user);
    }
    const newUser = await User.create({
      email,
      name,
      githubId: id,
      avartarUrl: avartar_url,
    });
    return cb(null, newUser);
  } catch (error) {
    return cb(error);
  }
};

export const postGithubLogin = (req, res) => {
  res.redirect(routes.home);
};
----------------------------------------------------------------------------

⭕cb 함수는 passport에서 제공된 callback함수.
cb는 인증에 성공한 상황에서 호출이 되어야 한다.


⭕함수에 들어가는 파라미터중 사용하지 않는것은 "_" 혹은 "__"
로 표시(그냥없애버리면 자리 순서때문에 안됨)

⭕동일한 사용자를 찾았을때 cb함수를 호출.
